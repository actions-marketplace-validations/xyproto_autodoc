name: Go package

on: [push]

jobs:
  build-ollama:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache ollama executable
        id: cache-ollama-exec
        uses: actions/cache@v2
        with:
          path: ollama/ollama
          key: ollama-exec-${{ runner.os }}-${{ github.run_id }}

      - name: Setup Go
        if: steps.cache-ollama-exec.outputs.cache-hit != 'true'
        uses: actions/setup-go@v2
        with:
          go-version: '1.21'

      - name: Build Ollama
        if: steps.cache-ollama-exec.outputs.cache-hit != 'true'
        run: |
          git clone --recursive https://github.com/jmorganca/ollama && cd ollama && go generate ./... && go build -v

      - name: Test the ollama executable
        run: ollama/ollama --help

      - name: Upload ollama executable as artifact
        uses: actions/upload-artifact@v2
        with:
          name: ollama-executable
          path: ollama/ollama

  pull-models:
    needs: build-ollama
    runs-on: ubuntu-latest
    strategy:
      matrix:
        model:
          # - 'codeup:latest'
          - 'llama2:chat'
          # ... other models
    steps:
      - name: Download ollama executable artifact
        uses: actions/download-artifact@v2
        with:
          name: ollama-executable
          path: ollama/

      - name: Set execute permissions for ollama
        run: chmod +x ollama/ollama

      - name: Run ollama in the background
        run: ollama/ollama serve &

      - name: Pull the model
        run: ollama/ollama pull ${{ matrix.model }}

      - name: Upload .ollama Directory as Artifact
        uses: actions/upload-artifact@v2
        with:
          name: ollama-models
          path: .ollama/

  run-model:
    needs: pull-models
    runs-on: ubuntu-latest
    strategy:
      matrix:
        model:
          # - 'codeup:latest'
          - 'llama2:chat'
          # ... other models
    steps:
      - name: Download ollama executable artifact
        uses: actions/download-artifact@v2
        with:
          name: ollama-executable
          path: ollama/

      - name: Download .ollama Directory Artifact
        uses: actions/download-artifact@v2
        with:
          name: ollama-models
          path: .ollama/

      - name: Set execute permissions for ollama
        run: chmod +x ollama/ollama

      - name: Run ollama in the background
        run: ollama/ollama serve &

      - name: Generate a Modelfile
        run: |
          echo "FROM ${{ matrix.model }}" > Modelfile
          echo "PARAMETER temperature 0.1" >> Modelfile
          echo "SYSTEM \"\"\"" >> Modelfile
          cat prompt.txt >> Modelfile
          echo "\"\"\"" >> Modelfile

      - name: Run ollama with the model
        run: |
          MODEL_NAME=$(echo "${{ matrix.model }}_custom" | tr ':-' '__')
          ollama/ollama create "${MODEL_NAME}" -f Modelfile
          ollama/ollama run "${MODEL_NAME}" "$(cat prompt.txt)" > "${MODEL_NAME}.md"

      - name: Commit and push the API documentation
        run: |
          MODEL_NAME=$(echo "${{ matrix.model }}_custom" | tr ':-' '__')
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add "${MODEL_NAME}.md" || true
          git commit -m "Add result files from GitHub Actions"
          git log -1 --pretty=%B | grep -q "Update API documentation" || git commit -m "Update API documentation" && git push || true
